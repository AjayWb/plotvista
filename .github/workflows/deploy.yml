name: Deploy PlotVista to Railway & Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run backend tests
      working-directory: ./backend
      run: npm test || echo "No backend tests configured"

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm run test:ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Check build output
      working-directory: ./frontend
      run: |
        if [ ! -d "dist" ]; then
          echo "Build failed - no dist directory"
          exit 1
        fi
        echo "Build successful"

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Vercel CLI
      run: npm install -g vercel

    - name: Deploy to Vercel Preview
      working-directory: ./frontend
      run: |
        npm install
        npm run build
        vercel --token ${{ secrets.VERCEL_TOKEN }} --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Deploy Backend to Railway
      uses: railway-deploy@v3
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service_name: 'plotvista-backend'
        environment: 'production'

    - name: Install Vercel CLI
      run: npm install -g vercel

    - name: Deploy Frontend to Vercel
      working-directory: ./frontend
      run: |
        npm install
        npm run build:production
        vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: Run post-deployment health checks
      run: |
        echo "Waiting for deployments to be ready..."
        sleep 30
        
        # Check backend health
        if curl -f "${{ secrets.RAILWAY_BACKEND_URL }}/health"; then
          echo "‚úÖ Backend health check passed"
        else
          echo "‚ùå Backend health check failed"
          exit 1
        fi
        
        # Check frontend
        if curl -f "${{ secrets.VERCEL_FRONTEND_URL }}"; then
          echo "‚úÖ Frontend health check passed"
        else
          echo "‚ùå Frontend health check failed"
          exit 1
        fi

  notify:
    needs: [deploy-production]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "üéâ PlotVista deployed successfully!"
          echo "Frontend: ${{ secrets.VERCEL_FRONTEND_URL }}"
          echo "Backend: ${{ secrets.RAILWAY_BACKEND_URL }}"
        else
          echo "‚ùå Deployment failed"
          exit 1
        fi